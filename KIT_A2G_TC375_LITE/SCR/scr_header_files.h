/**********************************************************************************************************************
 * \file scr_header_files.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/


#ifndef SCR_HEADER_FILES_H_
#define SCR_HEADER_FILES_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/

 typedef enum
{
     CHANEL0   =  0,
     CHANEL1   =  1,
     CHANEL2   =  2,
     CHANEL3   =  3,
}SCR_ADC_Chanel_Select;

//typedef struct Scr_Shared_Data
//{
//    volatile unsigned int Data_1;
//    volatile unsigned int Data_2;
//        //char *info;
//} SCR_SHARED_DATA_TYPE;









/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void gpio_init(void);
void scr_rtcInit(void);

unsigned char SCR_ADC_IsSampling(void);
void SCR_ADC_EnableModulTriggerDumyConversion(void);
void SCR_ADC_DisableModule(void);
unsigned char SCR_ADC_IsEnabled(void);
unsigned char SCR_ADC_isReadyForNewConversion(void);
void SCR_ADC_SelectChannel(unsigned char channel);
void SCR_ADC_StartNewConversion(void);
unsigned char SCR_ADC_GetResult(void);
unsigned char SCR_ADC_IsResultValid(void);
unsigned char SCR_ADC_StartNewConversionGetResult(void);

unsigned char IsStandbyMode(void);
void TrigerWakeUpFromStandbyMode(void);

//void IfxScrPort_configurePortControl(unsigned char port, unsigned char pinIndex,unsigned char controlValue);
//void SCR_Port_EnablePortPad(unsigned char port, unsigned char pinIndex);
//void SCR_GPIO_EnablePortPad(unsigned int port);

void Duty_Cycle_Calculator_Function(void);


void SCR_ExternalInterruptChanelSelect(void);

void SCR_IR_Select_External_Interrupt_Line(void);
void SCR_IR_Select_Edge_Mode(void);
void SCR_IR_Enable_Interrupt_Node(void);
void SCR_Select_Interrupt_Priority(void);

void SCR_Timer_2_Basic_Operations(void);
void SCR_CCT_Timer_Basic_Operation(void);
void SCR_CCU_Capture_Mode_0(void);
void SCR_CCU_Capture_Mode_1_Config(void);

void delay(void);

#endif /* SCR_HEADER_FILES_H_ */
