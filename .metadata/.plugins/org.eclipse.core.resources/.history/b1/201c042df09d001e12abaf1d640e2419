/**********************************************************************************************************************
 * \file SCR_Macros.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef SCR_MACROS_H_
#define SCR_MACROS_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "registers.h"
#include "scr_header_files.h"
#include "SCR_Macros.h"
#include "SCR_TypesReg.h"
/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define     InterruptNode_externalInterrupt0         0    /**< \brief XINTR0(External Interrupt 0) */
#define     InterruptNode_timer0                     1    /**< \brief XINTR1(Timer 0) */
#define     InterruptNode_externalInterrupt1         2    /**< \brief XINTR2(External Interrupt 1) */
#define     InterruptNode_timer1                     3    /**< \brief XINTR3(Timer 1) */
#define     InterruptNode_uart                       4    /**< \brief XINTR4(UART) */
#define     InterruptNode_t2ccu_lin                  5    /**< \brief XINTR5(shared by T2CCU and LIN) */
#define     InterruptNode_wcan                       6    /**< \brief XINTR6(WCAN) */
#define     InterruptNode_adc_ssc                    7    /**< \brief XINTR7(shared by ADC and SSC) */
#define     InterruptNode_externalInterrupt2         8   /**< \brief XINTR8(External Interrupt 2) */
#define     InterruptNode_externalInterrupt3_4_5_6   9    /**< \brief XINTR9(shared by External Interrupt 3,External Interrupt 4,External Interrupt 5 and External Interrupt 6) */
#define     InterruptNode_externalInterrupt7_8_9     0xA  /**< \brief XINTR10(shared by External Interrupt 7,External Interrupt 8 and External Interrupt 9) */
#define     InterruptNode_externalInterrupt10_11_12  0xB  /**< \brief XINTR11(shared by External Interrupt 10,External Interrupt 11 and External Interrupt 12) */
#define     InterruptNode_externalInterrupt13_14_15  0xC  /**< \brief XINTR12(shared by External Interrupt 13,External Interrupt 14 and External Interrupt 15) */
#define     InterruptNode_rtc                        0xD   /**< \brief XINTR13(RTC) */

#define     ExternalInterrupt_0   0   /**< \brief External Interrupt 0 */
#define     ExternalInterrupt_1   1   /**< \brief External Interrupt 1 */
#define     ExternalInterrupt_2   2   /**< \brief External Interrupt 2 */
#define     ExternalInterrupt_3   3   /**< \brief External Interrupt 3 */
#define     ExternalInterrupt_4   4   /**< \brief External Interrupt 4 */
#define     ExternalInterrupt_5   5   /**< \brief External Interrupt 5 */
#define     ExternalInterrupt_6   6   /**< \brief External Interrupt 6 */
#define     ExternalInterrupt_7   7   /**< \brief External Interrupt 7 */
#define     ExternalInterrupt_8   8   /**< \brief External Interrupt 8 */
#define     ExternalInterrupt_9   9   /**< \brief External Interrupt 9 */
#define     ExternalInterrupt_10  10  /**< \brief External Interrupt 10 */
#define     ExternalInterrupt_11  11  /**< \brief External Interrupt 11 */
#define     ExternalInterrupt_12  12  /**< \brief External Interrupt 12 */
#define     ExternalInterrupt_13  13  /**< \brief External Interrupt 13 */
#define     ExternalInterrupt_14  14  /**< \brief External Interrupt 14 */
#define     ExternalInterrupt_15  15   /**< \brief External Interrupt 15 */

#define     SCR_T01_TCON_IE0        1
#define     SCR_T01_TCON_IE1        3   /** \brief Offset for SCR_T01_TCON_Bits.IE1 */

#define     ExternalInterruptTriggerEdge_risingEdge           0 /**< \brief Low to high transition on the pin will cause interrupts */
#define     ExternalInterruptTriggerEdge_fallingEdge          1 /**< \brief High to Low transition on the pin will cause interrupts */
#define     ExternalInterruptTriggerEdge_bothEdge             2 /**< \brief Any transition on the pin will cause interrupts */
#define     ExternalInterruptTriggerEdge_bypassEdgeDetection  3  /**< \brief Edge detection unit in SCU is bypassed */

#define     SCR_IR_EXICON0_EXINT0_MSK   0x3 /** \brief Mask for Ifx_SCR_IR_EXICON0_Bits.EXINT0 */
#define     SCR_IR_EXICON1_EXINT4_MSK   0x3 /** \brief Mask for Ifx_SCR_IR_EXICON1_Bits.EXINT4 */
#define     SCR_IR_EXICON2_EXINT8_MSK   0x3 /** \brief Mask for Ifx_SCR_IR_EXICON2_Bits.EXINT8 */
#define     SCR_IR_EXICON3_EXINT12_MSK  0x3 /** \brief Mask for Ifx_SCR_IR_EXICON3_Bits.EXINT12 */



#define     BITMASK_4                   0x30
#define     BITMASK_2                   0x0C
#define     EXINTA                     0X00
#define     Right_Shift_Posotion_4      4
#define     Right_Shift_Posotion_2      2

#define     EXINTXA         0x00
#define     EXINTXB         0x01
#define     EXINTXC         0x02
#define     EXINTXD         0x03

#define  SCR_Port0_Index_00     0   /**< \brief Port 00 */
#define  SCR_Port1_Index_01     1   /**< \brief Port 01 */
#define  SCR_Port2_Index_02     2   /**< \brief Port 02 */
#define  SCR_Port3_Index_03     3    /**< \brief Port 03 */

#define  SCR_Port_PinIndex_0    0  /**< \brief Pin 0 */
#define  SCR_Port_PinIndex_1    1  /**< \brief Pin 1 */
#define  SCR_Port_PinIndex_2    2  /**< \brief Pin 2 */
#define  SCR_Port_PinIndex_3    3  /**< \brief Pin 3 */
#define  SCR_Port_PinIndex_4    4  /**< \brief Pin 4 */
#define  SCR_Port_PinIndex_5    5  /**< \brief Pin 5 */
#define  SCR_Port_PinIndex_6    6  /**< \brief Pin 6 */
#define  SCR_Port_PinIndex_7    7  /**< \brief Pin 7 */

#define  SCR_IoControl_input_tristate        0x0    /**< \brief No input pull device connected, tri-state mode */
#define  SCR_IoControl_output_pushpullGpio   0x10   /**< \brief Push pull general purpose output */

#define  SCR_IO_PAGE0   0
#define  SCR_IO_PAGE1   0
//#define  SCR_IO_PAGE2   0
/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
 
/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/


#endif /* SCR_MACROS_H_ */
